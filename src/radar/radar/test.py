from radar.packets.QuantumScan import QuantumScan
from radar.packets.QuantumReport import QuantumReport

quantum_scan_packets = [
    '03002800926501015600fa0008001d006c005100000059006b5451045c080019282938473e2a4441373e202f212324232b253726282b2f292f2e2e36372b2f38333a333d3138393b40463f413b443e46474148414e474a5250504d514b4c5250465d595e57',
    '03002800936501015600fa0008001d006d005400000000696c000d4b492a045c0500181622233122282234382e1b241d251f2628242527282c292b2c2d2f2b3533313534353535393b3c3c393a42383b423d483c4f434a45444e414e4f494f4f484d534d4b4e6265',
    '03002800946501015600fa0008001d006e005400000008692203025a694a035c05002120281f322528352e38211b231f291d242523272227273329372e2e2f322d2c3538373c3a40373a43393f3d3f453d42394d4d404b4c4f515250565251445957564b52575e58',
    '03002800956501015600fa0008001d006f005600000009694d03434a63005312020000002731392055492c55483430172226252123202024262a272e252a2d2c2b32382e3133313438363d3c3d363d3c3d403e463f4743424a474550514946464e5354584b5556495557',
    '03002800966501015600fa0008001d0070005600000007694a06144e114a7569060000001d203820483f25505329311c222a262123222527262925342d2e2d2c322e352f3439363333353b40333b393c3f4043423741464044524945484a4f4c58464a4a5656555d595b',
    '03002800976501015600fa0008001d0071005600000068696a060046056a785304000000151e323b49425a4a4c6a56242322231e262222292b2b253e2c282a2d2f2a37313532383b36343f393b3d3a4346453d413c4b494c494943494f4b504c4b4e474e565156585b52',
    '03002800986501015600fa0008001d007200560000000029560500333753005b05000000311b32304353747577b09d4620221e1f2a232825252826423e272b3232302e34342f2e333438393f3b443b43403f43484941414a47484646534d455154525b56544e5a584f5b',
    '03002800996501015600fa0008001d00730056000000080039030048481d734d05000000493037355243545779e2d44d2d1d202223312225232a26443e2d282c3132302d353431393c3f34343f363f323b46483b3c444d474c4948494f4f54524f4d484f4a5353575358',
]

quantum_report_packets = [
    '0200280001000000031e0000000000004b01010101030141012801030000014b013201000000014b013201000000006400320100010001012c00000109000141013201000000014b013201000000014b013201000000015a0132010000000001a4000001ee020000e80300004a011e0000000000d0070000c40900009600d20000000000000000000000000000000000000000001f0000003f0000007d000000fa00000077010000f4010000ee020000e8030000dc050000d0070000b80b0000a00f000070170000401f0000e02e0000803e0000c05d0000007d000080bb000000fa0000ee020000e80300004a011e0000000000d0070000c40900009600d20000000000',
    '0200280001000000031e0000000000004b01010101030141012801030000014b013201000000014b013201000000006400320100010001012c00000109000141013201000000014b013201000000014b013201000000015a0132010000000001a4000001ee020000e80300004a011e0000000000d0070000c40900009600d20000000000000000000000000000000000000000001f0000003f0000007d000000fa00000077010000f4010000ee020000e8030000dc050000d0070000b80b0000a00f000070170000401f0000e02e0000803e0000c05d0000007d000080bb000000fa0000ee020000e80300004a011e0000000000d0070000c40900009600d20000000000'
]

def main():
    for hex_stream in quantum_report_packets:
        data = bytes.fromhex(hex_stream)
        
        bl = QuantumReport.parse_report(data[:260])
        qr = QuantumReport(*bl)
        print(qr)
    
    for hex_stream in quantum_scan_packets:
        data = bytes.fromhex(hex_stream)
        
        qheader = QuantumScan.parse_header(data[:20])
        qdata = QuantumScan.parse_data(data[20:])
        qs = QuantumScan(*qheader, qdata)
        print(qs)
        range_meters = qr.ranges[qr.range_index] * qs.scan_len / qs.returns_per_range / 2
        print(f'{range_meters=}')
